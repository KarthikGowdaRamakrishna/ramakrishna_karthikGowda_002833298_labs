/*
 * CreateProductJPanel.java
 *
 * Created on September 18, 2008, 2:54 PM
 */
package ui.supplier;

import model.Product;
import model.Supplier;
import java.awt.CardLayout;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Feature;



/**
 *
 * @author Rushabh
 */
public class SearchForFeatureJPanel extends javax.swing.JPanel {

   JPanel workArea;
   Supplier supplier;
   Product product;
    
    /** Creates new form CreateProductJPanel */
    public SearchForFeatureJPanel(JPanel workArea, Product product, Supplier supplier) {
      
        initComponents();
        this.workArea = workArea;
        this.supplier = supplier;
        this.product = product;
        txtName.setText(product.getName());
        
        ArrayList<Feature> feature = new ArrayList<Feature>();
            feature = supplier.getProductCatalog().getFeatureList();
            refreshTableFeature(feature);
            refreshTableProduct();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblProductId = new javax.swing.JLabel();
        txtIdField = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        ProductFeatureTbl = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        AllFeaturesTbl = new javax.swing.JTable();
        btnAddFeature = new javax.swing.JButton();
        lblProdFeatures = new javax.swing.JLabel();
        lblAllFeatures = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        lblTitle.setText("Search for Product");

        lblProductId.setText("Feature Name: ");

        txtIdField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtIdFieldKeyReleased(evt);
            }
        });

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        lblName.setText("Product Name:");

        txtName.setEditable(false);
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });

        ProductFeatureTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Feature Name", "Value"
            }
        ));
        ProductFeatureTbl.setEnabled(false);
        jScrollPane1.setViewportView(ProductFeatureTbl);

        AllFeaturesTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Feature Name", "Value"
            }
        ));
        AllFeaturesTbl.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(AllFeaturesTbl);

        btnAddFeature.setText("Add");
        btnAddFeature.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFeatureActionPerformed(evt);
            }
        });

        lblProdFeatures.setText("Product Features:");

        lblAllFeatures.setText("All Features:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblProductId)
                            .addGap(18, 18, 18)
                            .addComponent(txtIdField))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(backBtn)
                            .addGap(37, 37, 37)
                            .addComponent(lblTitle)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblName)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblProdFeatures))
                        .addGap(38, 38, 38)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblAllFeatures)
                            .addComponent(btnAddFeature)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(lblTitle))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProductId)
                    .addComponent(txtIdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProdFeatures)
                    .addComponent(lblAllFeatures))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddFeature)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        CardLayout layout = (CardLayout)workArea.getLayout();
        layout.previous(workArea);
    }//GEN-LAST:event_backBtnActionPerformed

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void btnAddFeatureActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFeatureActionPerformed
        // TODO add your handling code here:
        int selectedRow = AllFeaturesTbl.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(this,"Please select a Row");
        }
        else{
            DefaultTableModel Allfeature = (DefaultTableModel) AllFeaturesTbl.getModel();
            Feature featureName = (Feature)Allfeature.getValueAt(selectedRow, 0);
            
            if(product.getFeatures().contains(featureName)){
                JOptionPane.showMessageDialog(this,"Feature Already exists!");
            }else{
                
                Feature newFeature = product.addNewFeature();
                newFeature.setName(featureName.getName());
                newFeature.setValue(featureName.getValue());
                newFeature.setOwner(product);
                refreshTableProduct();
            }
            
        }
    }//GEN-LAST:event_btnAddFeatureActionPerformed

    private void txtIdFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdFieldKeyReleased
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) AllFeaturesTbl.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(model);
        AllFeaturesTbl.setRowSorter(sorter);
        String searchOption = txtIdField.getText().toString();
            sorter.setRowFilter(RowFilter.regexFilter(searchOption, 0));
    }//GEN-LAST:event_txtIdFieldKeyReleased
   
    public void refreshTableProduct() {
      DefaultTableModel model = (DefaultTableModel) ProductFeatureTbl.getModel();
            model.setRowCount(0);
            for(Feature f: product.getFeatures()) {
                Object row[] = new Object[2];
                row[0] =f;
                row[1] = f.getValue().toString() == null ? "Empty" : f.getValue().toString();
                model.addRow(row);
            }
    }
    
    public void refreshTableFeature(ArrayList<Feature> feature) {
            DefaultTableModel Allfeature = (DefaultTableModel) AllFeaturesTbl.getModel();
            Allfeature.setRowCount(0);
            for (Feature f : feature){
                Object row[] = new Object[2];
                row[0] = f;
                row[1] = f.getValue().toString() == null ? "Empty" : f.getValue().toString();
                Allfeature.addRow(row);
            }
        }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable AllFeaturesTbl;
    private javax.swing.JTable ProductFeatureTbl;
    private javax.swing.JButton backBtn;
    private javax.swing.JButton btnAddFeature;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAllFeatures;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblProdFeatures;
    private javax.swing.JLabel lblProductId;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtIdField;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
